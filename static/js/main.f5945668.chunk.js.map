{"version":3,"sources":["hooks/useInputState.js","reducers/todo.reducer.js","hooks/useLocalStorageReducer.js","contexts/Todos.context.js","EditTodoForm.js","hooks/useToggle.js","TodoItem.js","TodoList.js","TodoForm.js","TodoApp.js","index.js"],"names":["initialVal","useState","value","setValue","evt","target","reducer","state","action","type","id","uuidv4","task","completed","filter","todo","index","Number","map","newTask","useLocalStorageReducer","key","defaultVal","useReducer","val","JSON","parse","window","localStorage","getItem","String","e","console","log","dispatch","useEffect","setItem","stringify","TodosContext","createContext","DispatchContext","TodosProvider","props","initialTodos","todoReducer","todos","Provider","children","EditTodoForm","toggleIsEditing","useInputState","changeNewTask","resetNewTask","useContext","onSubmit","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","useToggle","setState","toggle","TodoItem","isEditing","ListItem","height","backgroundColor","className","onClick","ListItemText","textDecoration","opacity","ListItemSecondaryAction","IconButton","Delete","Edit","memo","TodoList","length","Paper","overflowY","List","disablePadding","Divider","TodoForm","changeTask","resetTask","commands","command","callback","num","wordsToNumbers","resetTranscript","useSpeechRecognition","transcript","listening","browserSupportsSpeechRecognition","label","Tooltip","title","SpeechRecognition","startListening","stopListening","TodoApp","padding","elevation","Grid","container","justifyContent","marginTop","item","xs","md","lg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5945668.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default (initialVal) => {\r\n  const [value, setValue] = useState(initialVal);\r\n  const change = (evt) => {\r\n    setValue(evt.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, change, reset];\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst reducer = (state, action) => {\r\n    //here state is the todos itself\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [...state, { id: uuidv4(), task: action.task, completed: false }];\r\n        case \"REMOVE\":\r\n            return state.filter((todo, index) => {\r\n                const cond = typeof (action.id) !== 'number' ? todo.id !== action.id : index !== Number(action.id);\r\n                return cond;\r\n            });\r\n        case \"TOGGLE\":\r\n            return state.map((todo) =>\r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n            );\r\n        case \"EDIT\":\r\n            return state.map((todo, index) => {\r\n                const cond = typeof (action.id) !== 'number' ? todo.id === action.id : index === action.id;\r\n                const todoFinal = cond ? { ...todo, task: action.newTask } : todo;\r\n                return todoFinal;\r\n            }\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (e) {\r\n      console.log(e);\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n\r\n  //use Effect will used to update and data will be synced to local storage\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport default useLocalStorageReducer;\r\n","//todos and all methods that interact with todo\r\n//use the hook which we already made\r\nimport React, { createContext, useEffect } from \"react\";\r\nimport todoReducer from \"../reducers/todo.reducer\";\r\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\r\n\r\nexport const TodosContext = createContext();\r\n// we are making two context because even when todos are not changing components are rerendered\r\n\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  var initialTodos = JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\");\r\n\r\n\r\n  // call dispatch with the action and other parameters\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    \"todos\",\r\n    initialTodos,\r\n    todoReducer\r\n  );\r\n  // console.log(todos)\r\n  return (\r\n    // value={{ todos, dispatch }}\r\n    <TodosContext.Provider value={todos}>\r\n      {/* {{ dispatch }} */}\r\n      {/* // but this makes aan object every single time so we should change it */}\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./contexts/Todos.context\";\r\n\r\nfunction EditTodoForm({ id, task, toggleIsEditing }) {\r\n  const [newTask, changeNewTask, resetNewTask] = useInputState(task);\r\n  const dispatch = useContext(DispatchContext);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"EDIT\", id, newTask });\r\n        resetNewTask();\r\n        toggleIsEditing();\r\n      }}\r\n      style={{ marginLeft: \"1rem\", width: \"50%\" }}\r\n    >\r\n      <TextField\r\n        value={newTask}\r\n        margin=\"normal\"\r\n        onChange={changeNewTask}\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import { useState } from \"react\";\r\n\r\nfunction useToggle(initialVal = false) {\r\n  // call useState\r\n  const [state, setState] = useState(initialVal);\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggle];\r\n}\r\n//return peice of state and function to change it\r\n\r\nexport default useToggle;\r\n","import React, { useContext, memo } from \"react\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport useToggle from \"./hooks/useToggle\";\r\nimport { DispatchContext } from \"./contexts/Todos.context\";\r\nimport './TodoItem.css';\r\n\r\nfunction TodoItem({ task, completed, id }) {\r\n  const [isEditing, toggleIsEditing] = useToggle(false);\r\n  const dispatch = useContext(DispatchContext);\r\n  return (\r\n    <ListItem style={{ height: \"64px\", backgroundColor: completed ? '#d8bdff' : 'rgb(243, 171, 201)' }} className='TodoItem' onClick={() => dispatch({ type: \"TOGGLE\", id })}>\r\n      {isEditing ? (\r\n        <EditTodoForm id={id} task={task} toggleIsEditing={toggleIsEditing} />\r\n      ) : (\r\n        <>\r\n\r\n          <ListItemText\r\n            style={{ textDecoration: completed ? \"line-through\" : \"none\", opacity: completed ? 0.7 : 1, }}\r\n          >\r\n            {task}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={() => dispatch({ type: \"REMOVE\", id })}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Edit\" onClick={toggleIsEditing}>\r\n              <Edit />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default memo(TodoItem);\r\n","import React, { useContext } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { TodosContext } from \"./contexts/Todos.context\";\r\nimport { Paper, List, Divider } from \"@material-ui/core\";\r\nfunction TodoList() {\r\n  const todos = useContext(TodosContext);\r\n  if (todos.length > 0)\r\n    return (\r\n      <Paper style={{ overflowY: 'auto', height: '350px', backgroundColor: ` rgb(243, 171, 201)` }}>\r\n        <List disablePadding style={{ height: '100%' }}>\r\n          {todos.map((todo, index) => (\r\n            // JSX/REACT FRAGMENT  WON'T RESULT IN EXTRA MARKUP ---- JUST TO GROUP  ELEMENTS\r\n            <div key={todo.id} >\r\n              <TodoItem {...todo} />\r\n              {index <= todos.length - 1 && <Divider style={{ backgroundColor: 'rgb(19, 7, 51)' }} />}\r\n            </div>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport { Paper, TextField, Tooltip } from \"@material-ui/core\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport wordsToNumbers from \"words-to-numbers\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\r\nimport FormatClearIcon from \"@material-ui/icons/FormatClear\";\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./contexts/Todos.context\";\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm() {\r\n  const [task, changeTask, resetTask] = useInputState(\"\");\r\n  const dispatch = useContext(DispatchContext);\r\n  const commands = [\r\n    {\r\n      command: \"Delete note :num\",\r\n      callback: (num) => {\r\n        dispatch({ type: \"REMOVE\", id: Number(wordsToNumbers(num) - 1) });\r\n      },\r\n    },\r\n\r\n    {\r\n      command: \"add *\",\r\n      callback: (todo) => {\r\n        dispatch({ type: \"ADD\", task: todo });\r\n      },\r\n    },\r\n    {\r\n      command: \"change * for :num\",\r\n      callback: (task, num) => {\r\n        dispatch({\r\n          type: \"EDIT\",\r\n          id: Number(wordsToNumbers(num) - 1),\r\n          newTask: task,\r\n        });\r\n      },\r\n    },\r\n    {\r\n      command: \"clear\",\r\n      callback: ({ resetTranscript }) => resetTranscript(),\r\n    },\r\n  ];\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition({ commands });\r\n\r\n  return (\r\n    <Paper id='TodoForm-root' >\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch({ type: \"ADD\", task });\r\n          resetTask();\r\n        }}\r\n      >\r\n        <div className='TodoForm-desc'>\r\n          <div>\r\n            <div>\r\n              To add, type or speak <span>Add your_note</span>\r\n            </div>\r\n            <div>\r\n              To delete, speak <span>Delete note thirty fourth</span>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              To change, speak <span>Change new_task for third</span>\r\n            </div>\r\n            <div>\r\n              Microphone <span>{listening ? \"ON\" : \"OFF\"}</span>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>{transcript === \"\" ? \"speak...\" : transcript}</div>\r\n          </div>\r\n        </div>\r\n        <div className='TodoForm-form'>\r\n          <TextField\r\n            value={task}\r\n            onChange={changeTask}\r\n            margin=\"normal\"\r\n            label=\"Add new Todo\"\r\n            className='TodoForm-text'\r\n          />\r\n          {browserSupportsSpeechRecognition ? (\r\n            <div>\r\n              <Tooltip title=\"Start\">\r\n                <MicIcon\r\n                  onClick={SpeechRecognition.startListening}\r\n                  className='TodoForm-icon'\r\n                />\r\n              </Tooltip>\r\n              <Tooltip title=\"Stop\">\r\n                <MicOffIcon\r\n                  onClick={SpeechRecognition.stopListening}\r\n                  className='TodoForm-icon'\r\n                />\r\n              </Tooltip>\r\n              <Tooltip title=\"Reset Transcript\">\r\n                <FormatClearIcon\r\n                  onClick={resetTranscript}\r\n                  className='TodoForm-icon'\r\n                />\r\n              </Tooltip>\r\n            </div>\r\n          ) : (\r\n            <span style={{ margin: \"auto 0\" }}>\r\n              Browser doesn't support speech recognition.\r\n            </span>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { TodosProvider } from \"./contexts/Todos.context\";\r\nfunction TodoApp() {\r\n    return (\r\n        <Paper\r\n            style={{\r\n                padding: 0,\r\n                margin: 0,\r\n                height: \"100vh\",\r\n                backgroundColor: \"#2b2442\",\r\n            }}\r\n            elevation={0}\r\n        >\r\n\r\n            <Grid container justifyContent=\"center\" style={{ marginTop: '1rem', marginLeft: `3.5px` }}>\r\n                <Grid item xs={11} md={8} lg={4}>\r\n                    <TodosProvider>\r\n                        <TodoForm />\r\n                        <TodoList />\r\n                    </TodosProvider>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TodoApp;\r\n\r\n//each todo will have an id,task,completed\r\n","import TodoApp from './TodoApp';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"App\">\n      <TodoApp className='App-main' />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}